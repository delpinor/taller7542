#include "../View/View_Jugador.h"

#include <sstream>

View_Jugador::View_Jugador() {}

void View_Jugador::initialize(Jugador *model,SDL_Renderer * gRenderer,LTexture * texturaJugador)
{
    this->texturaJugador=texturaJugador;
    this->model = model;

    gSpriteClips[ 0 ].x =   0;
    gSpriteClips[ 0 ].y =   150;
    gSpriteClips[ 0 ].w =  90;
    gSpriteClips[ 0 ].h = 130;


    gSpriteClips[ 1 ].x =  100;
    gSpriteClips[ 1 ].y =  150;
    gSpriteClips[ 1 ].w =  90;
    gSpriteClips[ 1 ].h = 130;



    gSpriteClips[ 2 ].x = 200;
    gSpriteClips[ 2 ].y =   150;
    gSpriteClips[ 2 ].w =  90;
    gSpriteClips[ 2 ].h = 130;



    gSpriteClips[ 3 ].x = 300;
    gSpriteClips[ 3 ].y =   150;
    gSpriteClips[ 3 ].w =  90;
    gSpriteClips[ 3 ].h = 130;


    gSpriteClips[ 4 ].x = 400;
    gSpriteClips[ 4 ].y =   150;
    gSpriteClips[ 4 ].w =  90;
    gSpriteClips[ 4 ].h = 130;

}

void View_Jugador::SetModel( Jugador * model)
{
    this->model = model;
}

void View_Jugador::render( int camX, int camY,SDL_Renderer * gRenderer )
{

    SDL_Rect* currentClip = &gSpriteClips[frame /CANTSPRITECLIP ];
    if((this->model->getVelX()!=0) || (this->model->getVelY()!=0))
   {
    frame+= 1 ;

 }
    if (frame / CANTSPRITECLIP > CANTSPRITECLIP)
    {
        frame=1;
    }
    this->texturaJugador->render( this->model->getPosX() - camX, this->model->getPosY() - camY,currentClip,0,NULL, this->model->getDireccion(),gRenderer);

}



