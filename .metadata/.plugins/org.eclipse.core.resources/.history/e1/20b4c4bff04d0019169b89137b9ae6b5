#ifndef MODEL_JUGADOR_H_
#define MODEL_JUGADOR_H_
#include <SDL2/SDL.h>
#include "../Model/LTexture.h"
#include "../Model/Estado.h"
#include "../Model/Activo.h"
#include "../Model/Inactivo.h"
class Jugador
{
public:
    static const int ANCHO_JUGADOR = 90;
    static const int ALTO_JUGADOR = 120;
    static const int VELOCIDAD_JUGADOR = 1;
    Jugador();
    void move();
    int getPosX();
    int getPosY();
    int getVelX();
    int getVelY();
    void setPosX(int PosX);
    void setPosY(int PosY);
    void setPosInitX(int posX);
    void setPosInitY(int posY);
    void disminuirVelocidadX();
    void disminuirVelocidadY();
    void aumentarVelocidadX();
    void aumentarVelocidadY();
    bool estaActivo();
    void detenerVelocidad();
    void activar();
    void desactivar();
    void setDireccion(double direccion);
    bool collide(SDL_Rect * camara);
    double getDireccion();
    void updateDirection();
    void updateAceleracion(int ac);
    void updateVelocidad ( int velx, int vely);
    std::string datosString();

private:
    SDL_Rect mCollider;
    Estado* estado;
    Activo activo;
    Inactivo inactivo;
    double direccion;
};
#endif
